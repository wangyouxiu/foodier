<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom" >
  <select id="queryItemComments" parameterType="java.util.Map" resultType="com.imooc.pojo.vo.ItemCommentVO">
    select
      ic.comment_level as commentLevel,
      ic.content as content,
      ic.sepc_name as specName,
      ic.created_time as createdTime,
      u.face as userFace,
      u.nickname as nickname
    from items_comments ic
    left join users u
    on ic.user_id = u.id
    where ic.item_id = #{paramsMap.itemId}
    <if test="paramsMap.level != null and paramsMap.level != '' ">
      and ic.comment_level =#{paramsMap.level}
    </if>
  </select>

  <select id="searchItems" parameterType="java.util.Map" resultType="com.imooc.pojo.vo.SearchItemsVO">
    select
      i.id as itemId,
      i.item_name as itemName,
      i.sell_counts as sellCounts,
      ii.url as imgUrl,
      tempSpec.price_discount as price
    from items i
    left join items_img ii
    on i.id = ii.item_id
    left join (
      select item_id,MIN(price_discount) as price_discount
      from items_spec
      group by item_id
    ) tempSpec
    on i.id = tempSpec.item_id
    where ii.is_main = 1
    <if test="paramsMap.keyWords != null and paramsMap.keyWords != '' ">
      and i.item_name like '%${paramsMap.keyWords}%'
    </if>
    order by
    <choose>
      <when test="paramsMap.sort == &quot;c&quot; ">
        i.sell_counts desc
      </when>
      <when test="paramsMap.sort == &quot;t&quot; ">
        tempSpec.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>
  <!--k:默认排序，根据name
  c:根据销量排序
  p:根据价格排序-->

    <select id="searchItemsByThirdCat" parameterType="java.util.Map" resultType="com.imooc.pojo.vo.SearchItemsVO">
        select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
        from items i
        left join items_img ii
        on i.id = ii.item_id
        left join (
        select item_id,MIN(price_discount) as price_discount
        from items_spec
        group by item_id
        ) tempSpec
        on i.id = tempSpec.item_id
        where ii.is_main = 1
        and i.cat_id = #{paramsMap.catId}
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;t&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="java.util.List" resultType="com.imooc.pojo.vo.ShopcartVO">
        select
          t_items.id as itemId,
          t_items.item_name as itemName,
          t_items_img.url as itemImgUrl,
          t_items_spec.id as specId,
          t_items_spec.name as specName,
          t_items_spec.price_discount as priceDiscount,
          t_items_spec.price_normal as priceNormal
        from items_spec t_items_spec
        left join items t_items
        on t_items.id = t_items_spec.item_id
        left join items_img t_items_img
        on t_items_img.item_id = t_items.id
        where t_items_img.is_main = 1
        and t_items_spec.id in
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
          #{specId}
        </foreach>
    </select>

    <update id="decreaseItemSpecStock">
        update
          items_spec
        set
          stock = stock - #{pendingCounts}
        where
          id = #{specId}
        and
          stock >= #{pendingCounts}
    </update>
</mapper>